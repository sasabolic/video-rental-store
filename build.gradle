buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example.videorentalstore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    jaxbVersion = '2.3.0'
    hikariVersion = '2.7.7'
    h2Version = '1.4.196'
    evoInflectorVersion = '1.2.2'
}

dependencyManagement {
    dependencies {
        dependency "javax.xml.bind:jaxb-api:${jaxbVersion}"
        dependency "com.h2database:h2:${h2Version}"
        dependency "org.atteo:evo-inflector:${evoInflectorVersion}"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.javamoney:moneta:1.1')
    compileOnly('org.projectlombok:lombok')

    // database
    compile('mysql:mysql-connector-java')
    compile('org.liquibase:liquibase-core')
    compile('javax.xml.bind:jaxb-api')


    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.h2database:h2')
}

task buildDocker(type: Exec) {
    doFirst {
        copy {
            from "src/main/docker/"
            into "build/docker/"
            include "*"
        }
        copy {
            from "build/libs"
            into "build/docker/"
            include "*.jar*"
        }
    }
    commandLine 'docker', 'image', 'build', '-f', 'build/docker/Dockerfile', '-t', project.name, 'build/docker/'
}

buildDocker.dependsOn build